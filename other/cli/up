#!/bin/bash
#####################
##        up       ##
###############################################
## Запустить проект с помощью docker-compose ##
###############################################
: '
  
  1. Определить название группы конфигов для запуска приложения
  2. Скопировать configs/groups/$cogfigs_group/environment в configs/active
  3. Скопировать файл configs/groups/$cogfigs_group/laravel/.env в project/.env
  4. Скопировать файл configs/groups/$cogfigs_group/docker-compose/docker-compose.yml в docker-compose.yml
  5. Произвести простановку путей в ряде файлов
  6. Запустить проект

'
#########################################################################
func_wrapper_up () { 

  # 1. Определить название группы конфигов для запуска приложения
  # - Которую надо будет применить для запуска приложения

    # 1.1. Подготовить значение по умолчанию
    cogfigs_group=$cogfigs_group_default

    # 1.2. Если команде up переданы какие-то опции
    if [ $# != 0 ]; then
      
      # Провести парсинг этих опций
      OPTIND=1
      while getopts ":c:" opt; do
        case $opt in

          # Если опция -c передана
          c)
            # Если:
            # - Значение опции -c не пусто
            # - Существует группа опций с таким именем
            # То:
            # - Записать это значение в $cogfigs_group
            if [ -n "$OPTARG" ] && [ -d "$PWD/configs/groups/$OPTARG" ]; then
              cogfigs_group=$OPTARG
            fi
            ;;
        esac
      done      

    fi

  # 2. Скопировать configs/groups/$cogfigs_group/environment в configs/active
  
    # 2.1. Сообщить
    echo -en "$YELLOW--- app up ---> Копирую конфиги из группы $cogfigs_group в configs/active ...$NORMAL"

    # 2.2. Скопировать
    {
      sudo cp -rf configs/groups/$cogfigs_group/environment/* configs/active/
    } || {
      echo -e "$RED--- app up ---> Ошибка! Cм.строку $LINENO скрипта $BASH_SOURCE$NORMAL"
      return
    }  

    # 2.3. Сообщить об успехе
    echo -e "$GREEN Успех! $NORMAL"    

  # 3. Скопировать файл configs/groups/$cogfigs_group/laravel/.env в project/.env  

    # 3.1. Сообщить
    echo -en "$YELLOW--- app up ---> Копирую файл configs/groups/$cogfigs_group/laravel/.env в project/.env ...$NORMAL"

    # 3.2. Скопировать
    {
      sudo cp -f configs/groups/$cogfigs_group/laravel/.env project/.env
    } || {
      echo -e "$RED--- app up ---> Ошибка! Cм.строку $LINENO скрипта $BASH_SOURCE$NORMAL"
      return
    }  

    # 3.3. Сообщить об успехе
    echo -e "$GREEN Успех! $NORMAL"    

  # 4. Скопировать файл configs/groups/$cogfigs_group/docker-compose/docker-compose.yml в docker-compose.yml

    # 4.1. Сообщить
    echo -en "$YELLOW--- app up ---> Копирую файл configs/groups/$cogfigs_group/docker-compose/docker-compose.yml в docker-compose.yml ...$NORMAL"

    # 4.2. Скопировать
    {
      sudo cp -f configs/groups/$cogfigs_group/docker-compose/docker-compose.yml docker-compose.yml
    } || {
      echo -e "$RED--- app up ---> Ошибка! Cм.строку $LINENO скрипта $BASH_SOURCE$NORMAL"
      return
    }  

    # 4.3. Сообщить об успехе
    echo -e "$GREEN Успех! $NORMAL"

  # 5. Произвести простановку путей в ряде файлов

    # 5.1. Сообщить 
    echo -e "$YELLOW--- app up ---> Произвожу подстановку пути к корню проекта в конфиги проекта...$NORMAL"

    # 5.2. Записать в переменную текущий путь
    project_path=$PWD

    # 5.3. Проставить пути
    {
      
      # 1] Проставить пути в docker-compose.yml
      echo -en "$YELLOW--- app up ---> docker-compose.yml ...$NORMAL"
      sed -i -e "s#<path_to_the_project>#$project_path#g" docker-compose.yml
      echo -e "$GREEN Успех! $NORMAL"

      # 2] Проставить пути в configs/active/nginx/sites/project.app
      echo -en "$YELLOW--- app up ---> -- configs/active/nginx/sites/project.app ...$NORMAL"
      sed -i -e "s#<path_to_the_project>#$project_path#g" configs/active/nginx/sites/project.app
      echo -e "$GREEN Успех! $NORMAL"

      # 3] Проставить пути в configs/active/supervisor/supervisor.ini
      echo -en "$YELLOW--- app up ---> -- configs/active/supervisor/supervisor.ini ...$NORMAL"
      sed -i -e "s#<path_to_the_project>#$project_path#g" configs/active/supervisor/supervisor.ini
      echo -e "$GREEN Успех! $NORMAL"

      # 4] Проставить пути в configs/active/supervisor/websocket.ini
      echo -en "$YELLOW--- app up ---> -- configs/active/supervisor/websocket.ini ...$NORMAL"
      sed -i -e "s#<path_to_the_project>#$project_path#g" configs/active/supervisor/websocket.ini
      echo -e "$GREEN Успех! $NORMAL"

    } || {
      echo -e "$RED--- app up ---> Ошибка! Cм.строку $LINENO скрипта $BASH_SOURCE$NORMAL"
      return
    }  
 
  # 6. Запустить проект

    # 6.1. Сообщить
    echo -e "$YELLOW--- app up ---> Начинаю запуск проекта...$NORMAL"    

    # 6.2. Запустить
    {
      docker-compose pull
      docker-compose up -d      
    } || {
      echo -e "$RED--- app up ---> Ошибка! Cм.строку $LINENO скрипта $BASH_SOURCE$NORMAL"
      return
    }

    # 6.3. Сообщить об успешном запуске
    echo -e "$GREEN--- app up ---> Проект успешно запущен!$NORMAL"

:;}
func_wrapper_up "$@"

